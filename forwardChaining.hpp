//
//  ForwardChaining.hpp
//  forwardChain
//
//  Created by Anisa Yniesta on 9/18/22.
//

#ifndef ForwardChaining_hpp
#define ForwardChaining_hpp

#include <stdio.h>
#include <string>
using namespace std;

class ForwardChaining{
public:
    string conditionalVariableQueue[160];
    int front;
    int rear;
    int numItems;
    int statementNumber = 0;
    string knowledgeBase[32];
    string healthcareIssue[14] = {"MONETARY FUNDS", "CREATE LAWS", "WHOM", "ACTION", "STATES", "INDIVIDUAL", "EXPAND", "RESTRICT/REGULATE",
                                  "SUBSIDY HEALTHCARE COSTS AND TAX BREAKS", "TAX BREAKS FOR VALIDATED HEALTHCARE PROGRAMS", "PROVIDING INSURANCE FOR NO AND LOW INCOME POPULATIONS", "FREE ACCESS TO DOCTORS FOR ROUTINE CHECKUPS AND VISITS", "MAKE LAWS TO ENFORCE TRANSPARANCY ABOUT COSTS AFTER RECEIVING CARE", "MAKE LAWS TO ENFORCE TRANSPARENCY AND EXPAND ON DENYING CONDITIONS"};
    string gunViolenceIssues[5] = {"MAKE WAITING PERIODS FOR BUYING GUNS REQUIRED", "MAKE BACKGROUND CHECKS UNIVERSAL AND EASY TO ACCESS", "MAKE LICENSING REQUIRED", "LIMIT LOBBYING FUNDS FROM NON PROFIT AND FOR PROFIT CORPORATIONS", "OUTLAW/BAN MILITARY GRADE WEAPONS ACCORDING TO THE 9TH AMENDMENT AND THE ASSULT WEAPON BAN (1994)"};
    
    string educationIssues[5] = {"PROVIDE FUNDS FOR EARLY EDUCATIONAL PROGRAMS (AGE 6M - 6 YRS)", "HIGHER WAGES", "REDUCE CORE CLASSES TO PROVIDE MORE CAREER-ORIENTED COURSES", "REEXPAND ON THE ACCES AND VARIETY OF PROGRAMS OFFERED", "HIGHER STANDARDS"};
  
    string economyIssues[15] = {"PROVIDE MONETARY FUNDS TO INFRASTRUCTURE AND MANUFACTURING", "PROVIDE FUNDS TO IMPROVE WORKING ENVIRONMENTS", "SUBSIDY MEDICARE, MEDICAID AND HEALTHCARE", "LOWER TAXES FOR CORPORATIONS", "LABOR GRANTS AND LOANS", "PERSONAL PROTECTION EQUIPTMENT GRANTS/LOANS", "EXPIDENTURE GRANTS AND LOANS", "LOWER TAXES FOR SMALL BUSINESSES", "STIMULUS CHECKS", "LOWER INCOME TAXES", "INCREASE MINIMUM WAGE", "LOWER BUSINESS INTEREST RATES", "HIGHER TAXES ON UNEMPLOYED POPULATION", "HIGHER CORPORATION TAXES", "TARRIFS"};
    
    ForwardChaining(){
        front = 0;
        rear = -1;
        numItems = 0;
    }
    void enqueue(string);
    string dequeue();
    bool isEmpty();
    bool isFull();
    void printVariableList(string variableList[]);
    void printConclusionVariableStack();
};
#endif /* ForwardChaining_hpp */
